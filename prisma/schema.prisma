// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())  // Se mantiene igual
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  oculto    Boolean  @default(false)

  // Relación con UserPokemon (favoritos)
  userPokemons UserPokemon[]
}

model Pokemon {
  id   Int    @id @default(autoincrement())  // Si usas IDs numéricos en la API
  name String
  // Otros campos de Pokémon
  userPokemons UserPokemon[]
}

model UserPokemon {
  id        Int     @id @default(autoincrement()) // ID de la relación
  userId    Int     // Relaciona con User.id
  pokemonId Int     // Relaciona con Pokemon.id

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
}
